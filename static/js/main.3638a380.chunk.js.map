{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Title/Title.module.css","Components/Cards/Cards.jsx","Components/Charts/Charts.jsx","api/index.js","Components/CountryPicker/CountryPicker.jsx","Components/Title/Title.jsx","App.js","index.js"],"names":["module","exports","Info","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","a","card","infected","CardContent","Typography","head","nmbr","start","end","value","duration","separator","date","Date","toDateString","time","toTimeString","asd","Charts","url","fetchData","country","changeableUrl","axios","get","fetchCountries","countries","map","name","Countries","handleCountryChange","useState","setCountries","useEffect","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","Title","maintitle","App","state","setState","this","Cards","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3638a380.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3VbTh\",\"card\":\"Cards_card__27CKJ\",\"infected\":\"Cards_infected__2qe8n\",\"recovered\":\"Cards_recovered__16eQ1\",\"deaths\":\"Cards_deaths__1zFK6\",\"time\":\"Cards_time__2SNfC\",\"date\":\"Cards_date__8QsYk\",\"head\":\"Cards_head__2yTtK\",\"asd\":\"Cards_asd__31JYO\",\"nmbr\":\"Cards_nmbr__183cF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"maintitle\":\"Title_maintitle__3pwk0\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport a from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\r\n  console.log(confirmed);\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n\r\n      <Grid container spacing={3} justify=\"center\">\r\n\r\n        <Grid item xs={12} md={3} component={Card} className={a(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography className={styles.head}>\r\n              Infected\r\n            </Typography>\r\n            <Typography className={styles.nmbr}>\r\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography className={styles.date}>\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography className={styles.time}>\r\n              {new Date(lastUpdate).toTimeString()}\r\n            </Typography>\r\n            <Typography className={styles.asd} >\r\n              Number of active cases of COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3} component={Card} className={a(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography className={styles.head}>\r\n              Recovered\r\n            </Typography>\r\n            <Typography className={styles.nmbr} >\r\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography className={styles.date} >\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography className={styles.time}>\r\n              {new Date(lastUpdate).toTimeString()}\r\n            </Typography>\r\n            <Typography className={styles.asd}>\r\n              Number of recoveries from COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3} component={Card} className={a(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography className={styles.head}>\r\n              Deaths\r\n            </Typography>\r\n            <Typography className={styles.nmbr}>\r\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography  className={styles.date}>\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography  className={styles.time} >\r\n              {new Date(lastUpdate).toTimeString()}\r\n            </Typography>\r\n            <Typography className={styles.asd}>\r\n              Number of deaths caused by COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Info;\r\n","import React from 'react';\r\n\r\n\r\nconst Charts = () => {\r\n\r\n    return(\r\n        <>\r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Charts;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\nconsole.log(confirmed);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n    \r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport './CountryPicker.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n     fetchAPI();\r\n  }, []);\r\n\r\n    return(\r\n        <>\r\n            <FormControl className='formControl'>\r\n            <NativeSelect defaultValue=\"\" onChange={ (e) => handleCountryChange(e.target.value)}>\r\n            <option value=\"\">Global</option>\r\n            {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n            </FormControl>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\nimport styles from './Title.module.css'\r\n\r\nfunction Title() {\r\n    return (\r\n        <div className={styles.maintitle}>\r\n            COVID Statistics\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\n\r\nimport Cards from './Components/Cards/Cards';\r\nimport Charts from './Components/Charts/Charts';\r\nimport CountryPicker from './Components/CountryPicker/CountryPicker';\r\nimport Title from './Components/Title/Title';\r\nimport { fetchData } from './api';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n      data: {},\r\n      country: '',\r\n      \r\n    }\r\n \r\n    async componentDidMount() {\r\n      const data = await fetchData();\r\n      \r\n      this.setState({ data });\r\n      \r\n    }\r\n  \r\n    handleCountryChange = async (country) => {\r\n      const data = await fetchData(country);\r\n  \r\n      this.setState({ data, country: country });\r\n    }\r\n  \r\n    render() {\r\n      const { data, country } = this.state;\r\n     \r\n      return (\r\n        \r\n        <div className='container'>\r\n          <Title/>\r\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n          <Cards data={data} />\r\n          <Charts /> \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <>\r\n        <App/>\r\n    </>\r\n    ,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}